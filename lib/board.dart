import 'package:flutter/material.dart';
import 'package:labyrinth_maker/barrier/horizontal_barrier.dart';
import 'package:labyrinth_maker/barrier/vertical_barrier.dart';
import 'package:labyrinth_maker/cell.dart';

class Board extends StatelessWidget {
  const Board({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.all(10),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 2, child: HorizontalBarrier(isOccupied: false)),
            ],
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const <Widget>[
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
              Spacer(),
              Flexible(flex: 2, child: VerticalBarrier(isOccupied: false)),
              Spacer(),
              Flexible(flex: 12, child: Cell()),
            ],
          ),
        ],
      ),
    );
  }
}
